name: Build, Test and Release

on:
    pull_request_target:
        types: [opened, synchronize, reopened]
        branches: [ master ]

jobs:
    build-test-release:
        name: Build artifacts
        runs-on: ubuntu-latest

        steps:
            - name: Checkout master branch
              uses: actions/checkout@v3
            
            - name: Checkout PR branch
              uses: actions/checkout@v3
              with:
                ref: ${{ github.event.pull_request.head.ref }}
                repository: ${{ github.event.pull_request.head.repo.full_name }}
                path: "test-github-actions"

            - name: Setup Go
              uses: actions/setup-go@v4
              with:
                go-version-file: go.mod
                
            - name: Ensure Modules
              working-directory: ./test-github-actions
              run: make tidy

            - name: Ensure Formatting
              working-directory: ./test-github-actions
              run: make fmt

            - name: Run Linters
              working-directory: ./test-github-actions
              run: make lint

            - name: Build Binary
              working-directory: ./test-github-actions
              run: make bin

              ## +Run Tests ##



            - name: Check if automerge ## Simulate "release-checker" script
              working-directory: ./test-github-actions
              id: check_automerge
              run: |
                  AUTOMERGE=$(out/test-github-actions automerge)
                  echo "automerge=$AUTOMERGE" >> $GITHUB_OUTPUT

            - name: create tarball
              id: create_tarball
              working-directory: ./test-github-actions
              if: ${{ steps.check_automerge.outputs.automerge == 'true'}}
              run: tar -zcvf out/test-github-actions.tgz out/test-github-actions

            - name: Approve PR
              id: approve_pr
              if: ${{ steps.check_automerge.outputs.automerge == 'true'}}
              uses: hmarr/auto-approve-action@v3

            - name: Merge PR
              id: merge_pr
              if: ${{ steps.check_automerge.outputs.automerge == 'true'}}
              uses: pascalgn/automerge-action@v0.13.1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                MERGE_METHOD: squash
                MERGE_LABELS: ""

            - name: Create the the release
              id: create_release
              if: ${{ steps.check_automerge.outputs.automerge == 'true'}}
              uses: softprops/action-gh-release@v1
              with:
                tag_name: v0.0.0
#                body: ${{ steps.check_version_in_PR.outputs.PR_release_body }}
                files: test-github-actions/out/test_github_actions.tgz
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
